service: ${self:custom.global_vars.SERVICE_NAME}
useDotenv: true

custom:
  stage: ${self:custom.environment.${opt:stage, 'dev'}, 'dev'}
  stack:
    db: ${file(./stack/db/custom-variables.yml)}
  global_vars:
    SERVICE_NAME: ${env:BASE_NAME}-${self:custom.stage}-api
  corsEnabled:
    prod: false
    other: true
  cacheEnabled:
    other: false
  environment:
    dev: dev
    stage: stage
    prod: prod
  lambdaDebugLogLevel:
    dev: 4
    stage: 4
    prod: 4
  dotenv:
    include: []
  deletionPolicy:
    prod: Retain
    other: Delete
  serverless-iam-roles-per-function:
    defaultInherit: true
  ## Plugin config: serverless-dynamodb-local
  dynamodb: ${file(./stack/db/dynamodb-local/custom-variables.yml)}
  alerts: ${file(./config/alerts.yml)}
  serverlessIfElse:
    - If: '"${self:custom.stage}" != "prod"'
      Exclude:
        - functions.list-tables.reservedConcurrency

plugins:
  - serverless-webpack
  - serverless-jam3-plugin
  - serverless-dynamodb-local
  - serverless-plugin-aws-alerts
  - serverless-iam-roles-per-function
  - serverless-plugin-ifelse
  - serverless-offline

package:
  individually: true

provider:
  name: aws
  runtime: nodejs12.x
  stackName: ${self:service}
  apiName: ${self:service}-apigateway
  memorySize: 512
  timeout: 10
  logs:
    restApi: true
  apiGateway:
    metrics: true
  tracing:
    lambda: true
    apiGateway: true
  environment:
    LOG_LEVEL: ${self:custom.lambdaDebugLogLevel.${self:custom.stage}}
  ## Provider: S3 buckets
  # s3: ${file(./config/provider/provider-s3.yml)}
  ## Provider: Deployment bucket
  # delpoymentPrefix: serverless
  # deploymentBucket: ${file(./config/provider/provider-deployment-bucket.yml)}
  ## Provider: HTTP API
  # httpApi: ${file(./config/provider/provider-http-api.yml)}
  ## Provider: ALB Application Load Balancer
  # alb: ${file(./config/provider/provider-alb-load-balancer.yml)}
  ## Plugin config: serverless-iam-roles-per-function
  iamRoleStatements: ${file(./config/plugin/serverless-iam-roles-per-function.yml)}

functions:
  - ${file(./src/functions/api/formations/get-user.yml)}
  - ${file(./src/functions/api/formations/post-user.yml)}

resources:
  - ${file(./stack/db/dynamodb.yml)}
  - ${file(./stack/db/sns.yml)}
